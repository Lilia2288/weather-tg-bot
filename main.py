from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import requests

# OpenWeatherMap API Key
OWM_API_KEY = "38ca48c0966459cb26384fd8e3b549c4"
TELEGRAM_TOKEN = "8110024487:AAFVbx6oqPfF4NELDU4vWHnp9K7Nb24-WEQ"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏
def get_weather(city: str):
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&units=metric&lang=uk&appid={OWM_API_KEY}"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        city_name = data["name"]
        temp = data["main"]["temp"]
        weather_desc = data["weather"][0]["description"]
        return f"–ü–æ–≥–æ–¥–∞ –≤ {city_name}: {temp}¬∞C, {weather_desc.capitalize()}"
    else:
        return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≥–æ–¥—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞."

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –§—ñ–∑–∏—á–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
    keyboard = [
        [KeyboardButton("üåç –ü–µ—Ä–µ–¥–∞—Ç–∏ –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—é", request_location=True)],
        [KeyboardButton("‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –º—ñ—Å—Ç–æ –≤—Ä—É—á–Ω—É")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π –Ω–∏–∂—á–µ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É:", 
        reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–∫–∞ –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—ó
async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    location = update.message.location
    lat = location.latitude
    lon = location.longitude
    url = f"http://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&units=metric&lang=uk&appid={OWM_API_KEY}"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        city_name = data["name"]
        temp = data["main"]["temp"]
        weather_desc = data["weather"][0]["description"]
        await update.message.reply_text(f"–ü–æ–≥–æ–¥–∞ –≤ {city_name}: {temp}¬∞C, {weather_desc.capitalize()}")
    else:
        await update.message.reply_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≥–æ–¥—É –∑–∞ –≤–∞—à–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—î—é.")

# –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥—É
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    city = update.message.text
    weather = get_weather(city)
    await update.message.reply_text(weather)

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.LOCATION, handle_location))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
